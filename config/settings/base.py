"""
Django settings for tickethub_back project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import environ

from datetime import timedelta
from pathlib import Path

import os
from dotenv import load_dotenv

# Obtener la ruta completa de la carpeta .envs/
envs_folder = '.envs/.local'

# Cargar todas las variables de entorno de los archivos .env en la carpeta .envs/
for env_file in os.listdir(envs_folder):
    load_dotenv(os.path.join(envs_folder, env_file), override=True)

env = environ.Env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

ROOT_DIR = environ.Path(__file__) - 3
APPS_DIR = ROOT_DIR.path('tickethub_back')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-%6b$b31raxi09@(c!#sid^8zuu7r2=geg2wh-hdbbv#qq32nfz'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# settings.py

ALLOWED_HOSTS = [
    '127.0.0.1', 
    'localhost',
    '3.138.171.121',
]

CORS_ALLOWED_ORIGINS = [ 
    'http://localhost:3000',
    'https://tickethubapi.onrender.com',
]


# Application definition

AUTH_USER_MODEL = 'users.User'

BASE_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

LOCAL_APPS = [
    'tickethub_back.users.apps.UsersConfig',
    'tickethub_back.utils.apps.UtilsConfig',
    'tickethub_back.events.apps.EventsConfig',
]

THIRD_APPS = [
    'rest_framework',
    'django_filters',
    'corsheaders',
    'django_extensions',
    'rest_framework_filters',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    'drf_yasg',
    'django_password_validators',
]

CALERY_APP = ['tickethub_back.taskapp.celery.CeleryAppConfig']

INSTALLED_APPS = BASE_APPS + LOCAL_APPS + THIRD_APPS + CALERY_APP

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (

        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

# Templates
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            str(APPS_DIR.path('templates')),
        ],
        'OPTIONS': {
            'debug': DEBUG,
            'loaders': [
                'django.template.loaders.filesystem.Loader',
                'django.template.loaders.app_directories.Loader',
            ],
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.i18n',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'django.template.context_processors.tz',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'




# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME':
        'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 8
        }
    },
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', },
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', },
    {
        'NAME': 'django_password_validators.password_character_requirements.password_validation.PasswordCharacterValidator',
        'OPTIONS': {
            'min_length_digit': 1,
            'min_length_alpha': 0,
            'min_length_special': 0,
            'min_length_lower': 1,
            'min_length_upper': 1,
            'special_characters': "~.,#!$%^&*;:{}=\-_()@'[]"
        }
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

LANGUAGES = [
    ('en', 'English'),
    ('es', 'Spanish'),
    # Agrega otros idiomas que necesites
]

# Agrega la ruta del directorio 'locale' en tu proyecto
LOCALE_PATHS = [
    os.path.join(ROOT_DIR, 'locale'),
]

# Language and timezone
TIME_ZONE = 'America/Bogota'

# USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Admin
ADMIN_URL = 'tickethub/app/admin/'
ADMINS = [
    ("""Liseth Castillo Qui√±ones""", 'liseth.castillo@correounivalle.edu.co'),
]
MANAGERS = ADMINS

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': False,
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
}


# DATABASES
DATABASES = {
    'default': env.db('DATABASE_URL', default=''),
}
DATABASES['default']['ATOMIC_REQUESTS'] = False


# Email
EMAIL_BACKEND = env('DJANGO_EMAIL_BACKEND', default='django.core.mail.backends.smtp.EmailBackend')

# EMAIL
# ------------------------------------------------------------------------------
EMAIL_FROM = env('DJANGO_EMAIL_FROM')
EMAIL_BACKEND = env('DJANGO_EMAIL_BACKEND')
EMAIL_USE_TLS = env('DJANGO_EMAIL_USE_TLS')
EMAIL_HOST = env('DJANGO_EMAIL_HOST')
EMAIL_HOST_USER = env('DJANGO_EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = env('DJANGO_EMAIL_HOST_PASSWORD')
EMAIL_PORT = env('DJANGO_EMAIL_PORT')


# Celery Configuration Options
if USE_TZ:
    CELERY_TIMEZONE = TIME_ZONE

CELERY_BROKER_URL = 'redis://redis:6379/0'
CELERY_RESULT_BACKEND = CELERY_BROKER_URL
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERYD_TASK_TIME_LIMIT = 5 * 60
CELERYD_TASK_SOFT_TIME_LIMIT = 60